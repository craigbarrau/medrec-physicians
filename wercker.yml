box: node:4.2.6-slim
dev:
  steps:
    - npm-install
    - internal/watch:
        code: node app.js
        reload: true

# Build definition
build:
  # The steps that will be executed on build
  steps:
    - script:
        code: export NODE_ENV='testing'
    # A step that executes `npm install` command
    - npm-install
    # A step that executes `npm test` command
    #- npm-test

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"
    - script:
        name: deploy to occs
        code: |
          APP_FRIENDLY_NAME=MedRec
          POSTDATA=$(cat <<ENDOFTEMPLATE
          {
            "deployment_id": "MedRec-Physicians-${TIMESTAMP}",
            "deployment_name": "${APP_FRIENDLY_NAME} latest",
            "desired_state": 1,
            "placement": {
              "pool_id": "default"
            },
            "quantities": {
              "app": ${SCALE_AMOUNT}
            },
            "stack": {
              "content": "version: 2\nservices:\n  app:\n    image: \"craigbarrau/medrec-physicians\"\n    ports:\n      - ${EXPOSED_PORT}/tcp\n    environment:\n      - \"occs:availability=per-pool\"\n      - \"occs:scheduler=random\"\n",
              "service_id": "app",
              "service_name": "${APP_FRIENDLY_NAME} latest",
              "subtype": "service"
            }
          }
          ENDOFTEMPLATE
          )
          echo $POSTDATA
          env
          curl -k -X POST -H "Authorization: Bearer ${API_TOKEN}" -d "${POSTDATA}" ${SERVICE_MANAGER}/api/v2/deployments/

push:
  steps:
    - internal/docker-push:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD
        repository: craigbarrau/medrec-physicians
